// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toolbar rendering render Toolbar 1`] = `
<DataToolbar
  id="data-toolbar"
>
  <DataToolbarContent
    breakpointMods={Array []}
    isExpanded={false}
    showClearFiltersButton={false}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <ForwardRef
      breakpointMods={
        Array [
          Object {
            "modifier": "space-items-sm",
          },
          Object {
            "modifier": "hidden",
          },
          Object {
            "breakpoint": "xl",
            "modifier": "visible",
          },
        ]
      }
    >
      <TaxonomySwitcher
        currentLocation="london"
        currentOrganization="org1"
        isLoading={false}
        locations={
          Array [
            Object {
              "href": "/locations/1-yaml/select",
              "id": 1,
              "title": "yaml",
            },
            Object {
              "href": "/locations/2-london/select",
              "id": 2,
              "title": "london",
            },
            Object {
              "href": "/locations/3-norway/select",
              "id": 3,
              "title": "norway",
            },
          ]
        }
        onLocationClick={[Function]}
        onOrgClick={[Function]}
        organizations={
          Array [
            Object {
              "href": "/organizations/1-org1/select",
              "id": 1,
              "title": "org1",
            },
            Object {
              "href": "/organizations/2-org2/select",
              "id": 2,
              "title": "org2",
            },
          ]
        }
        taxonomiesBool={
          Object {
            "locations": true,
            "organizations": true,
          }
        }
      />
    </ForwardRef>
    <ForwardRef
      breakpointMods={
        Array [
          Object {
            "modifier": "space-items-md",
          },
          Object {
            "modifier": "align-right",
          },
          Object {
            "modifier": "hidden",
          },
          Object {
            "breakpoint": "md",
            "modifier": "visible",
          },
        ]
      }
    >
      <DataToolbarItem>
        <Connect(OnClickOutside(notificationContainer))
          data={
            Object {
              "url": "/notification_recipients",
            }
          }
        />
      </DataToolbarItem>
      <DataToolbarItem>
        <UserDropdowns
          changeActiveMenu={[Function]}
          className=""
          notificationUrl="/notification_recipients"
          stopImpersonationUrl="/users/stop_impersonation"
          user={
            Object {
              "current_user": Object {
                "user": Object {
                  "firstname": "Admin",
                  "id": 4,
                  "lastname": "User",
                  "login": "admin",
                  "name": "Admin User",
                },
              },
              "user_dropdown": Array [
                Object {
                  "children": Array [
                    Object {
                      "href": "/Aa",
                      "isDivider": false,
                      "onClick": [MockFunction],
                      "title": "Aa",
                    },
                    Object {
                      "href": "/Cc",
                      "isDivider": false,
                      "onClick": [MockFunction],
                      "title": "Cc",
                    },
                  ],
                  "icon": "fa fa-user",
                  "name": "User",
                  "type": "sub_menu",
                },
              ],
            }
          }
        />
      </DataToolbarItem>
    </ForwardRef>
  </DataToolbarContent>
</DataToolbar>
`;
